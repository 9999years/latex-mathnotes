\NeedsTeXFormat{LaTeX2e}
\ProvidesExplPackage{mathnotes}{2019/10/17}{0.0.1}{Styles for mathematical
  note taking.}
% Module 'mn'

\RequirePackage{expl3}
% Load some utility packages.
\RequirePackage{xparse}  % Better command declarations.
% \RequirePackage{etoolbox}  % Robust command declarations.
\RequirePackage{xkeyval}  % Better keyval parsing.
\RequirePackage{kvoptions}  % More flexible package options.

% Initializes complementary #1 and no#1 package options.
\NewDocumentCommand{\mathnotes@comploption}{O{false} m}{%
	\DeclareBoolOption[#1]{#2}%
	\DeclareComplementaryOption{no#2}{#2}}

\mathnotes@comploption[true]{fonts}
\mathnotes@comploption[true]{stix}
\mathnotes@comploption[true]{symbols}
\mathnotes@comploption{listings}
\mathnotes@comploption{knowledge}
\mathnotes@comploption{index}
\mathnotes@comploption{footnotes}
\mathnotes@comploption{figures}
\let\mathnotes@comploption\relax

\ProcessKeyvalOptions*

% Load fonts.
% Check if we can load fontspec; this is taken from fontspec.sty.
\bool_new:N \c__mn_fontspec_bool
\bool_set:Nn \c__mn_fontspec_bool
  {
    \sys_if_engine_xetex_p: || \sys_if_engine_luatex_p:
  }

% NOTE: The order these packages are loaded in is very important.
% - mathtools has to be loaded before these or overbrackets and such get
%   messed up
% - unicode-math overwrites a bunch of commands, so should be loaded after
%   amsmath and others
% - amsmath should be loaded after stix2 (not sure why, but the stix2
%   documentation specifies this) -- however, if we can use fontspec, we
%   just load the stix2 fonts without the stix2 package itself, so we load
%   amsmath before unicode-math (and the stix2 fonts)
\RequirePackage{mathtools}
\ifmathnotes@fonts
  \bool_if:NT \c__mn_fontspec_bool
    {
      \RequirePackage{amsmath}[2013/01/14]
      % unicode-math makes equations copy/pastable in PDF output.
      % Note that unicode-math encapsulates the functionality of fontspec.
      \RequirePackage[
        warnings-off={mathtools-colon,mathtools-overbracket}
      ]{unicode-math}
      \ifmathnotes@stix
        \setmainfont[
          Extension      = .otf,
          UprightFont    = *-Regular,
          BoldFont       = *-Bold,
          ItalicFont     = *-Italic,
          BoldItalicFont = *-BoldItalic,
        ]{STIX2Text}
        \setmathfont[
          Extension = .otf,
          StylisticSet={
            1, % better caligraphic forms
            8, % upright integrals
          },
        ]{STIX2Math}
    }
  \else
    % Otherwise, load non-XeTeX fallbacks.
    \RequirePackage[upint]{stix2}
    \RequirePackage{amsmath}[2013/01/14]
  \fi
\else
    % No fonts
    \RequirePackage{amsmath}[2013/01/14]
\fi

\ifmathnotes@symbols
  % Logical not
  \@ifpackageloaded{unicode-math}
    {\DeclareDocumentCommand{\lnot}{}{Â¬}}
    {\mathchardef\Not="1218}

  % Blackboard bold set symbols
  \NewDocumentCommand{\Rational}{}{\mathbb{Q}}
  \ProvideDocumentCommand{\Rat}{}{\Rational}
  \ProvideDocumentCommand{\Q}{}{\Rational}

  % \NewDocumentCommand{\Irrational}{}{\mathbb{I}}
  % \ProvideDocumentCommand{\Irrat}{}{\Irrational}
  % \ProvideDocumentCommand{\I}{}{\Irrational}

  \NewDocumentCommand{\Natural}{}{\mathbb{N}}
  \ProvideDocumentCommand{\Nat}{}{\Natural}
  \ProvideDocumentCommand{\N}{}{\Natural}

  \NewDocumentCommand{\Integer}{}{\mathbb{Z}}
  \ProvideDocumentCommand{\Int}{}{\Integer}
  \ProvideDocumentCommand{\Z}{}{\Integer}

  \NewDocumentCommand{\Complex}{}{\mathbb{C}}
  \ProvideDocumentCommand{\Comp}{}{\Complex}
  \ProvideDocumentCommand{\C}{}{\Complex}

  \NewDocumentCommand{\Real}{}{\mathbb{R}}
  % It's a bit unclear to me why this is necessary, but it is; probably
  % something to do with amssymb?
  \AtBeginDocument{\RenewDocumentCommand{\Re}{}{\Real}}
  \ProvideDocumentCommand{\R}{}{\Real}

  % Using the Weierstrass p here is probably a bit controversial, but I like
  % it. I'm open to change, though...
  \ProvideDocumentCommand{\powerset}{}{\wp}

  \RenewDocumentCommand{\vec}{m}{\mathbf{#1}}

  % Operator synonyms.
  % Set intersect.
  \ProvideDocumentCommand{\intersection}{}{\cap}
  \ProvideDocumentCommand{\inter}{}{\cap}
  \ProvideDocumentCommand{\bigintersection}{}{\bigcap}
  \ProvideDocumentCommand{\biginter}{}{\bigcap}

  % Set union.
  \ProvideDocumentCommand{\union}{}{\cup}
  \ProvideDocumentCommand{\bigunion}{}{\bigcup}
  % Disjoint union.
  \ProvideDocumentCommand{\disjointunion}{}{\sqcup}
  \ProvideDocumentCommand{\disunion}{}{\sqcup}

  % Divisiblity.
  \ProvideDocumentCommand{\divisible}{}{\mid}
  \ProvideDocumentCommand{\div}{}{\mid}
  % Negation.
  \ProvideDocumentCommand{\notdivisible}{}{\nmid}
  \ProvideDocumentCommand{\ndivisible}{}{\nmid}
  \ProvideDocumentCommand{\notdiv}{}{\nmid}
  \ProvideDocumentCommand{\ndiv}{}{\nmid}

  % Wrappers around floor and ceil.
  \ProvideDocumentCommand{\floor}{m}{\lfloor #1\rfloor}
  \ProvideDocumentCommand{\ceil}{m}{\lceil #1\rceil}

  % The default empty set symbol is very ugly. Use \varnothing instead,
  % which is less ugly.
  \AtBeginDocument{\RenewDocumentCommand{\emptyset}{}{\varnothing}}
  \AtBeginDocument{\RenewDocumentCommand{\es}{}{\emptyset}}

  % Function composition. The notation g \after f helps internalize the
  % order of operations. :)
  \ProvideDocumentCommand{\after}{}{\circ}

  % Cross product.
  \ProvideDocumentCommand{\cross}{}{\times}

  % Operators.
  % Function image.
  \DeclareMathOperator{\img}{img}
  % Function pre-image.
  \DeclareMathOperator{\pre}{pre}
  % Function stabilizer.
  \DeclareMathOperator{\Stab}{Stab}
  % Set of a function's fixed points.
  \DeclareMathOperator{\FixPt}{FixPt}

  % Injective function.
  \ProvideDocumentCommand{\injective}{}{\hookrightarrow}
  \ProvideDocumentCommand{\inj}{}{\hookrightarrow}
  % Surjective function.
  \ProvideDocumentCommand{\surjective}{}{\twoheadrightarrow}
  \ProvideDocumentCommand{\surj}{}{\twoheadrightarrow}
  % Function restriction.
  \ProvideDocumentCommand{\restr}{}{\restriction}

  \DeclareDocumentCommand{\qedmark}{}{\ensuremath{\square}}
\fi

% Gives this an equation in an amsmath starred environment.
\ProvideDocumentCommand{\numberthis}{}
  {\tag{\theequation}\refstepcounter{equation}}
% Gives this equation a number and label in an amsmath starred environment.
\ProvideDocumentCommand{\labelthis}{ m }
  {\numberthis
  \IfValueT{#1}{\label{#1}}}

\RequirePackage{enumitem}

\ifmathnotes@listings
  \RequirePackage{listings}
\fi
% If listings is loaded, make them colorful:
\@ifundefined{lstset}{}{
	\usepackage{xcolor}
	\lstset{
		basicstyle=\ttfamily,
		language=Haskell,
		breaklines,
		breakatwhitespace=true,
		tabsize=4,
		keywordstyle={\bf\ttfamily\color[rgb]{0,.3,.7}},
		commentstyle={\color[rgb]{0.133,0.545,0.133}},
		stringstyle={\color[rgb]{0.75,0.49,0.07}},
		basewidth=0.55em,
	}
}

% The \emailstyle command gives the style of an email; by default, we
% initialize it to \texttt.
\ProvideDocumentCommand{\emailstyle}{m}{\texttt{#1}}
% The \email command typesets an email; if the user has loaded the
% hyperref package, we can add a link as well.
\ProvideDocumentCommand{\email}{m}{%
  \@ifpackageloaded{hyperref}%
    {\href{mailto:#1}{\emailstyle{#1}}}%
    {\emailstyle{#1}}}

% Creates an acronym-command.
% \newacronym[<\command>]{<text>} defines \command to be \textsc{text}.
% \newacronym{<text>} defines \text to be \textsc{text}.
\ProvideDocumentCommand{\newacronym}{o m}
  % \mathnotes@acronym@cs@ is the string for the cs to be defined.
  {\def\mathnotes@acronym@cs@{%
    \IfValueTF{#1}%
      {\string#1}% Use optional arg for cs.
      {#2}}% Otherwise, use the acronym text.
  % Ensure that the cs is undefined.
  \@ifundefined{\mathnotes@acronym@cs@}%
    {}%
    {\PackageError{mathnotes}%
      {Refusing to redefine \csname\mathnotes@acronym@cs@\endcsname as an acronym}%
      {Pick a different destination control sequence with \protect\newacronym's
       optional argument?}}%
  % Redefine \mathnotes@acronym@cs@ to be the cs itself, not the string of
  % the cs to be defined.
  \edef\mathnotes@acronym@cs@{%
    \IfValueTF{#1}%
      {\noexpand#1}%
      {\csname #2\endcsname}}%
  % Finally, define the acronym command.
  \expandafter\def\mathnotes@acronym@cs@{\textsc{#2}}}

% \newacronyms takes a comma-separated list as its argument and defines them
% all as acronyms.
\ProvideDocumentCommand{\newacronyms}{>{\SplitList{,}} m}
  {\ProcessList{#1}{\newacronym}}

% Package configuration string values.
\define@cmdkeys{mathnotes}{instructor, course, name, email, institution, semester}
\NewDocumentCommand{mathnotes}{ m }
  {\setkeys{mathnotes}{#1}}

\author{%
  \mathnotes@name%
  \thanks{%
    \@ifundefined{mathnotes@email}{}{\email{\mathnotes@email};}
    \@ifundefined{mathnotes@course}{}{\mathnotes@course}
    \@ifundefined{mathnotes@instructor}{}{taught by \mathnotes@instructor}
    \@ifundefined{mathnotes@institution}{}{at \mathnotes@institution}
    \@ifundefined{mathnotes@semester}{}{, \mathnotes@semester.}%
}


\usepackage{mdframed}

\mdtheorem{thm}{Theorem}
\newtheorem{shortthm}[thm]{Theorem}
\newtheorem{lem}{Lemma}
\newtheorem{cor}{Corollary}

\theoremstyle{definition}
\newtheorem{defn}{Definition}
\newtheorem{notation}{Notation}
\newtheorem{prop}{Proposition}

\theoremstyle{remark}
\newtheorem{remark}{Remark}
\newtheorem{ex}{Example}

% reset for future defn.s
\theoremstyle{plain}

\NewDocumentCommand{\TODO} {s o}
	{\IfBooleanTF{#1}%
		{\def\TODO@fb{\framebox[\linewidth]}}%
		{\def\TODO@fb{\framebox}}%
	\expandafter
	\TODO@fb{%
		\textbf{TODO\IfValueT{#2}{:}}%
		\IfValueT{#2}{ #2}}}

\ifmathnotes@index
  \mathnotes@knowledgetrue
\fi

\ifmathnotes@knowledge
  \RequirePackage[quotation, xcolor, notion, makeidx]{knowledge}
  \knowledgeconfigure{visible anchor points=false}
  \knowledgestyle*{intro unknown}{
    boldface,
    underline=false,
    color=red,
  }
  \knowledgestyle*{kl unknown}{
    underline=false,
    color=red,
  }
  \knowledgestyle*{intro notion}{
    boldface,
    underline=false,
  }
\fi

\ifmathnotes@index
  \makeindex
\fi

\ifmathnotes@tabu
  \RequirePackage{multirow}
  \RequirePackage{booktabs}
  \RequirePackage{longtable}
  \RequirePackage{tabu}
  \ProvideExpandableDocumentCommand{\Th}{O{l} m}
    {\multicolumn{1}{#1}{\Bf{#2}}}
\fi

\ifmathnotes@figures
	% figure captions
	\RequirePackage{graphicx}
	\RequirePackage{caption}
	\captionsetup{format=hang, font={sf,footnotesize}, margin=1in}
\fi

\ifmathnotes@footnotes
	\PassOptionsToPackage{bottom, hang}{footmisc}
	\RequirePackage{footmisc}
	\setlength{\footnotesep}{\baselineskip}
\fi

% Document style.
\setlength{\parindent}{0em}
\setlength{\parskip}{1em}
